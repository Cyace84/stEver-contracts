.version sol 0.61.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Vault.sol, 52
ACCEPT
.loc ../contracts/Vault.sol, 53
SWAP
SETGLOB 16
.loc ../contracts/Vault.sol, 54
SETGLOB 17
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	_reserve_internal
.type	_reserve_internal, @function
CALL $_reserve_internal_macro$

.macro _reserve_internal_macro
.loc ../contracts/Vault.sol, 74
GETPARAM 7
FIRST
DEPTH
ADDCONST -2
PICK
SUB
UFITS 128
PUSHINT 1000000000
MAX
.loc ../contracts/Vault.sol, 0

.globl	_reserveWithValue_internal
.type	_reserveWithValue_internal, @function
CALL $_reserveWithValue_internal_macro$

.macro _reserveWithValue_internal_macro
.loc ../contracts/Vault.sol, 78
GETPARAM 7
FIRST
DEPTH
ADDCONST -2
PICK
SUB
UFITS 128
SUBR
UFITS 128
PUSHINT 1000000000
MAX
.loc ../contracts/Vault.sol, 0

.macro encodeDepositPayload
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/Vault.sol, 81
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 64
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $encodeDepositPayload_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3278174893
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro encodeDepositPayload_internal_macro
.loc ../contracts/Vault.sol, 83
SWAP
NEWC
STSLICE
.loc ../contracts/Vault.sol, 84
STU 64
.loc ../contracts/Vault.sol, 85
ENDC
.loc ../contracts/Vault.sol, 0

.macro decodeDepositPayload
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 88
LDREF
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $decodeDepositPayload_internal_macro$
}
PUSH S3
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 4, 0
	NEWC
	STSLICECONST x8335191c
	STSLICE
	STU 64
	STI 1
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 3
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	decodeDepositPayload_internal
.type	decodeDepositPayload_internal, @function
CALL $decodeDepositPayload_internal_macro$

.macro decodeDepositPayload_internal_macro
.loc ../contracts/Vault.sol, 90
CTOS
.loc ../contracts/Vault.sol, 92
DUP
PUSHINT 299
PUSHINT 0
SCHKBITREFSQ
PUSHCONT {
	.loc ../contracts/Vault.sol, 93
	PUSHSLICE x2_
	PUSHINT 0
	DUP
	BLKDROP2 1, 3
	.loc ../contracts/Vault.sol, 0
}
IFNOTJMP
.loc ../contracts/Vault.sol, 96
LDMSGADDR
.loc ../contracts/Vault.sol, 97
PLDU 64
.loc ../contracts/Vault.sol, 99
TRUE
.loc ../contracts/Vault.sol, 0

.globl	getDepositStEverAmount_internal
.type	getDepositStEverAmount_internal, @function
CALL $getDepositStEverAmount_internal_macro$

.macro getDepositStEverAmount_internal_macro
.loc ../contracts/Vault.sol, 103
GETGLOB 12
EQINT 0
GETGLOB 13
EQINT 0
OR
IFRET
.loc ../contracts/Vault.sol, 106
GETGLOB 12
MUL
UFITS 128
GETGLOB 13
DIV
.loc ../contracts/Vault.sol, 0

.globl	getWithdrawEverAmount_internal
.type	getWithdrawEverAmount_internal, @function
CALL $getWithdrawEverAmount_internal_macro$

.macro getWithdrawEverAmount_internal_macro
.loc ../contracts/Vault.sol, 110
GETGLOB 12
EQINT 0
GETGLOB 13
EQINT 0
OR
IFRET
.loc ../contracts/Vault.sol, 113
GETGLOB 13
MUL
UFITS 128
GETGLOB 12
DIV
.loc ../contracts/Vault.sol, 0

.macro initVault
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 117
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $initVault_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro initVault_internal_macro
.loc ../contracts/Vault.sol, 63
GETGLOB 9
GETGLOB 16
SDEQ
THROWIFNOT 100
.loc ../contracts/Vault.sol, 118
SETGLOB 15
.loc ../contracts/Vault.sol, 119
PUSHINT 100000000
MYADDR
GETGLOB 15
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
PUSHSLICE x31edd4c750bfca9f
NEWC
STSLICE
STSLICE
STU 128
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro receiveTokenWalletAddress
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 125
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $receiveTokenWalletAddress_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro receiveTokenWalletAddress_internal_macro
.loc ../contracts/Vault.sol, 126
ACCEPT
.loc ../contracts/Vault.sol, 127
SETGLOB 14
.loc ../contracts/Vault.sol, 0

.globl	_buildInitWithdrawUserData_internal
.type	_buildInitWithdrawUserData_internal, @function
CALL $_buildInitWithdrawUserData_internal_macro$

.macro _buildInitWithdrawUserData_internal_macro
.loc ../contracts/Vault.sol, 139
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
GETGLOB 17
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
GETGLOB 17
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/Vault.sol, 0

.globl	deployWithdrawUserData_internal
.type	deployWithdrawUserData_internal, @function
CALL $deployWithdrawUserData_internal_macro$

.macro deployWithdrawUserData_internal_macro
.loc ../contracts/Vault.sol, 157
CALLREF {
	CALL $_buildInitWithdrawUserData_internal_macro$
}
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
TUCK
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2820045005182170565370280386138670788247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST x345aaf9fc_
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro getWithdrawUserDataAddress
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 163
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $getWithdrawUserDataAddress_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xf0b2fe1a
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getWithdrawUserDataAddress_internal
.type	getWithdrawUserDataAddress_internal, @function
CALL $getWithdrawUserDataAddress_internal_macro$

.macro getWithdrawUserDataAddress_internal_macro
.loc ../contracts/Vault.sol, 171
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
CALLREF {
	CALL $_buildInitWithdrawUserData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/Vault.sol, 0

.macro getDetails
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 176
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $getDetails_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9888d5d8
	SWAP
	UNTUPLE 5
	REVERSE 6, 0
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	STU 128
	STU 128
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNTUPLE 5
	REVERSE 6, 0
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	STU 128
	STU 128
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getDetails_internal_macro
.loc ../contracts/Vault.sol, 177
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 15
GETGLOB 14
GETGLOB 12
GETGLOB 13
GETGLOB 16
TUPLE 5
.loc ../contracts/Vault.sol, 0

.macro addStrategy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 188
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $addStrategy_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro addStrategy_internal_macro
.loc ../contracts/Vault.sol, 58
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 101
.loc ../contracts/Vault.sol, 189
NOW
PUSHINT 0
DUP
TRIPLE
OVER
GETGLOB 18
ROT
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 18
.loc ../contracts/Vault.sol, 194
PUSHSLICE xc00000000000000000000000006b94cb2f
NEWC
STSLICE
STSLICE
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro strategyReport
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 197
OVER
PUSHCONT {
	LDU 128
	LDU 128
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 128
	LDU 128
}
IFELSE
LDU 128
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $strategyReport_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro strategyReport_internal_macro
.loc ../contracts/Vault.sol, 197
BLKDROP 3
.loc ../contracts/Vault.sol, 0

.macro deposit
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 203
LDU 128
LDU 64
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $deposit_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro deposit_internal_macro
.loc ../contracts/Vault.sol, 205
DEPTH
ADDCONST -2
PICK
PUSH S2
PUSHINT 1000000000
ADD
UFITS 128
GEQ
THROWIFNOT 103
.loc ../contracts/Vault.sol, 206
GETPARAM 7
FIRST
DEPTH
ADDCONST -2
PICK
PUSH S3
SUB
UFITS 128
SUB
UFITS 128
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 207
OVER
CALLREF {
	CALL $getDepositStEverAmount_internal_macro$
}
.loc ../contracts/Vault.sol, 208
GETGLOB 13
PUSH S3
ADD
UFITS 128
SETGLOB 13
.loc ../contracts/Vault.sol, 209
GETGLOB 12
OVER
ADD
UFITS 128
SETGLOB 12
.loc ../contracts/Vault.sol, 212
SWAP
NEWC
STU 64
.loc ../contracts/Vault.sol, 214
OVER
ROLL 3
GETGLOB 9
PUSHSLICE xc00000000000000000000000001ed110d9
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 215
ENDC
FALSE
GETGLOB 9
PUSHINT 500000000
GETGLOB 9
ROLL 5
GETGLOB 15
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 6
NEWC
STSLICECONST x20bfb3b8
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 232
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_internal_macro
.loc ../contracts/Vault.sol, 240
GETGLOB 9
GETGLOB 14
SDEQ
THROWIFNOT 105
.loc ../contracts/Vault.sol, 241
BLKSWAP 2, 3
XCHG S2
CALLREF {
	CALL $requestWithdraw_internal_macro$
}
.loc ../contracts/Vault.sol, 0
BLKDROP 3

.globl	requestWithdraw_internal
.type	requestWithdraw_internal, @function
CALL $requestWithdraw_internal_macro$

.macro requestWithdraw_internal_macro
.loc ../contracts/Vault.sol, 245
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 1000000000
SUB
UFITS 128
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 246
PUSH S2
CALLREF {
	CALL $getWithdrawUserDataAddress_internal_macro$
}
.loc ../contracts/Vault.sol, 247
SWAP
CALLREF {
	CALL $decodeDepositPayload_internal_macro$
}
DROP
NIP
.loc ../contracts/Vault.sol, 248
PUSH S2
ROLL 4
PAIR
OVER
GETGLOB 19
ROT
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STU 128
	STSLICE
}
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
.loc ../contracts/Vault.sol, 249
ROTREV
CALLREF {
	CALL $addPendingValueToUserData_internal_macro$
}
.loc ../contracts/Vault.sol, 0

.globl	handleAddPendingValueError_internal
.type	handleAddPendingValueError_internal, @function
CALL $handleAddPendingValueError_internal_macro$

.macro handleAddPendingValueError_internal_macro
.loc ../contracts/Vault.sol, 253
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 254
PLDU 64
.loc ../contracts/Vault.sol, 255
DUP
GETGLOB 19
PUSHINT 64
DICTUGET
IFREFELSEREF
{
	LDU 128
	LDMSGADDR
	ENDS
	PAIR
}
{
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PAIR
}
.loc ../contracts/Vault.sol, 256
DUP
SECOND
CALLREF {
	CALL $deployWithdrawUserData_internal_macro$
}
DROP
.loc ../contracts/Vault.sol, 257
DUP
SECOND
CALLREF {
	CALL $getWithdrawUserDataAddress_internal_macro$
}
.loc ../contracts/Vault.sol, 258
ROTREV
FIRST
ROT
CALLREF {
	CALL $addPendingValueToUserData_internal_macro$
}
.loc ../contracts/Vault.sol, 0

.globl	addPendingValueToUserData_internal
.type	addPendingValueToUserData_internal, @function
CALL $addPendingValueToUserData_internal_macro$

.macro addPendingValueToUserData_internal_macro
.loc ../contracts/Vault.sol, 262
XCHG S1, S2
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1124753509
STUR 143
STU 64
STU 128
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro onPendingWithdrawAccepted
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 268
OVER
PUSHCONT {
	LDU 64
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $onPendingWithdrawAccepted_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onPendingWithdrawAccepted_internal_macro
.loc ../contracts/Vault.sol, 269
DROP
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 270
DUP
GETGLOB 19
PUSHINT 64
DICTUGET
IFREFELSEREF
{
	LDU 128
	LDMSGADDR
	ENDS
	PAIR
}
{
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PAIR
}
.loc ../contracts/Vault.sol, 271
DUP2
FIRST
PUSH S2
SECOND
PUSHSLICE xc00000000000000000000000006420e445
NEWC
STSLICE
STSLICE
STU 128
STU 64
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 272
SECOND
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 273
GETGLOB 19
PUSHINT 64
DICTUDEL
DROP
SETGLOB 19
.loc ../contracts/Vault.sol, 0

.macro processSendToUser
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 276
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $processSendToUser_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro processSendToUser_internal_macro
.loc ../contracts/Vault.sol, 58
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 101
.loc ../contracts/Vault.sol, 277
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 278
PUSHINT 0
PUSHCONT {
	PUSH2 S0, S1
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/Vault.sol, 279
	PUSH2 S0, S1
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDMSGADDR
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		PAIR
	}
	.loc ../contracts/Vault.sol, 280
	DUP
	FIRST
	CALLREF {
		CALL $getWithdrawUserDataAddress_internal_macro$
	}
	.loc ../contracts/Vault.sol, 281
	SWAP
	SECOND
	SWAP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 12112001070505573100559184388815842756433778010148113
	STUR 175
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Vault.sol, 278
	INC
	UFITS 128
	.loc ../contracts/Vault.sol, 0
}
WHILE
DROP2
.loc ../contracts/Vault.sol, 284
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro withdrawToUser
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 287
OVER
PUSHCONT {
	LDU 128
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 128
}
IFELSE
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $withdrawToUser_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro withdrawToUser_internal_macro
.loc ../contracts/Vault.sol, 292
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 294
PUSH S2
CALLREF {
	CALL $getWithdrawEverAmount_internal_macro$
}
.loc ../contracts/Vault.sol, 295
PUSH2 S0, S3
LESS
PUSHCONT {
	.loc ../contracts/Vault.sol, 296
	PUSHINT 0
	PUSHCONT {
		PUSH2 S0, S2
		FIRST
		LESS
	}
	PUSHCONT {
		.loc ../contracts/Vault.sol, 297
		PUSH2 S0, S2
		SECOND
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		CALLREF {
			LDU 128
			LDU 64
			ENDS
			PAIR
		}
		.loc ../contracts/Vault.sol, 299
		DUP
		FIRST
		SWAP
		SECOND
		GETGLOB 9
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 42045022170482489768618347945393405442362385784933
		STUR 167
		STU 64
		STU 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Vault.sol, 296
		INC
		.loc ../contracts/Vault.sol, 0
	}
	WHILE
	BLKDROP 5
	.loc ../contracts/Vault.sol, 0
}
IFJMP
.loc ../contracts/Vault.sol, 303
GETGLOB 12
PUSH S4
GEQ
THROWIFNOT 106
.loc ../contracts/Vault.sol, 304
GETGLOB 13
OVER
SUB
UFITS 128
SETGLOB 13
.loc ../contracts/Vault.sol, 305
GETGLOB 12
PUSH S4
SUB
UFITS 128
SETGLOB 12
.loc ../contracts/Vault.sol, 308
ROT
NEWC
STSLICE
.loc ../contracts/Vault.sol, 309
STU 128
.loc ../contracts/Vault.sol, 310
ENDC
MYADDR
DUP
ROLL 4
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 4
NEWC
STSLICECONST x562548ad
STU 128
STSLICE
ROTREV
NEWC
STSLICE
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 0
DROP

.macro onAcceptTokensBurn
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 318
OVER
PUSHCONT {
	LDU 128
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 128
}
IFELSE
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $onAcceptTokensBurn_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensBurn_internal_macro
.loc ../contracts/Vault.sol, 326
CTOS
.loc ../contracts/Vault.sol, 327
DUP
LDMSGADDR
POP S2
.loc ../contracts/Vault.sol, 328
SWAP
PLDU 128
.loc ../contracts/Vault.sol, 329
DUP
CALLREF {
	CALL $_reserveWithValue_internal_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Vault.sol, 330
PUSH2 S0, S1
PUSHSLICE xc000000000000000000000000038c6da4b
NEWC
STSLICE
STSLICE
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 331
SWAP
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 107
STZEROES
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Vault.sol, 332
BLKDROP 4
GETGLOB 11
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Vault.sol, 0

.macro onRunBalancer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 336
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $onRunBalancer_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onRunBalancer_internal_macro
.loc ../contracts/Vault.sol, 58
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 101
.loc ../contracts/Vault.sol, 337
PUSHINT 0
PUSHCONT {
	PUSH2 S0, S1
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/Vault.sol, 339
	PUSH2 S0, S1
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDMSGADDR
		LDU 128
		LDU 128
		ENDS
		TRIPLE
	}
	.loc ../contracts/Vault.sol, 340
	DUP
	SECOND
	GTINT -1
	OVER
	THIRD
	GTINT -1
	AND
	THROWIF 104
	.loc ../contracts/Vault.sol, 341
	DUP
	FIRST
	.loc ../contracts/Vault.sol, 343
	OVER
	SECOND
	GTINT -1
	PUSHCONT {
		.loc ../contracts/Vault.sol, 344
		OVER
		SECOND
		UFITS 64
		OVER
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 42045022170482489768618347945393405442362819712428
		STUR 167
		STU 64
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Vault.sol, 0
	}
	IF
	.loc ../contracts/Vault.sol, 347
	OVER
	THIRD
	GTINT -1
	PUSHCONT {
		.loc ../contracts/Vault.sol, 348
		OVER
		THIRD
		UFITS 64
		OVER
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 42045022170482489768618347945393405442362578466351
		STUR 167
		STU 64
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Vault.sol, 0
	}
	IF
	.loc ../contracts/Vault.sol, 0
	DROP2
	.loc ../contracts/Vault.sol, 337
	INC
	.loc ../contracts/Vault.sol, 0
}
WHILE
DROP2
.loc ../contracts/Vault.sol, 0

.macro processWithdrawFromStrategies
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 355
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/Vault.sol, 0
CALLREF {
	CALL $processWithdrawFromStrategies_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro processWithdrawFromStrategies_internal_macro
.loc ../contracts/Vault.sol, 58
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 101
.loc ../contracts/Vault.sol, 356
PUSHINT 0
PUSHCONT {
	PUSH2 S0, S1
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/Vault.sol, 357
	PUSH2 S0, S1
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDMSGADDR
		LDU 128
		ENDS
		PAIR
	}
	.loc ../contracts/Vault.sol, 358
	DUP
	SECOND
	UFITS 64
	SWAP
	FIRST
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 42045022170482489768618347945393405442362578466351
	STUR 167
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Vault.sol, 356
	INC
	UFITS 128
	.loc ../contracts/Vault.sol, 0
}
WHILE
DROP2
.loc ../contracts/Vault.sol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Vault.sol, 363
ACCEPT
.loc ../contracts/Vault.sol, 364
DUP
LDU 32
POP S2
.loc ../contracts/Vault.sol, 365
PUSHINT 1124753509
EQUAL
PUSHCONT {
	.loc ../contracts/Vault.sol, 366
	DUP
	CALLREF {
		CALL $handleAddPendingValueError_internal_macro$
	}
	.loc ../contracts/Vault.sol, 0
}
IF
.loc ../contracts/Vault.sol, 0
DROP
CALLREF {
	CALL $c7_to_c4$
}

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDDICT
LDDICT
ENDS
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 128
	}
	IF
	PUSHINT 2
	PUSH S2
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 2, 0
	PUSHREF {
	}
	NEWDICT
	DUP
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 128
ROLLREV 9
NEWC
STSLICE
STU 128
STU 128
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICE
STREF
STDICT
STDICT
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro nonce
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c6cca7d1
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro withdrawUserDataCode
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cd9d2795
	NEWC
	STSLICE
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1860184547
LEQ
IFJMPREF {
	DUP
	PUSHINT 72661746
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 23564005
		EQUAL
		IFJMPREF {
			CALL $onPendingWithdrawAccepted$
		}
		DUP
		PUSHINT 43557982
		EQUAL
		IFJMPREF {
			CALL $deposit$
		}
		DUP
		PUSHINT 53811484
		EQUAL
		IFJMPREF {
			CALL $decodeDepositPayload$
		}
		DUP
		PUSHINT 72661746
		EQUAL
		IFJMPREF {
			CALL $processWithdrawFromStrategies$
		}
	}
	DUP
	PUSHINT 666029341
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 150079474
		EQUAL
		IFJMPREF {
			CALL $strategyReport$
		}
		DUP
		PUSHINT 411620824
		EQUAL
		IFJMPREF {
			CALL $getDetails$
		}
		DUP
		PUSHINT 458199443
		EQUAL
		IFJMPREF {
			CALL $initVault$
		}
		DUP
		PUSHINT 666029341
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
	DUP
	PUSHINT 1187817425
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1095622495
		EQUAL
		IFJMPREF {
			CALL $onRunBalancer$
		}
		DUP
		PUSHINT 1130691245
		EQUAL
		IFJMPREF {
			CALL $encodeDepositPayload$
		}
		DUP
		PUSHINT 1145301613
		EQUAL
		IFJMPREF {
			CALL $withdrawToUser$
		}
		DUP
		PUSHINT 1187817425
		EQUAL
		IFJMPREF {
			CALL $nonce$
		}
	}
	DUP
	PUSHINT 1860184547
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1302144917
		EQUAL
		IFJMPREF {
			CALL $withdrawUserDataCode$
		}
		DUP
		PUSHINT 1354746527
		EQUAL
		IFJMPREF {
			CALL $receiveTokenWalletAddress$
		}
		DUP
		PUSHINT 1745391003
		EQUAL
		IFJMPREF {
			CALL $onAcceptTokensBurn$
		}
		DUP
		PUSHINT 1860184547
		EQUAL
		IFJMPREF {
			CALL $processSendToUser$
		}
	}
}
DUP
PUSHINT 2110382445
LEQ
IFJMPREF {
	DUP
	PUSHINT 1890778650
	EQUAL
	IFJMPREF {
		CALL $getWithdrawUserDataAddress$
	}
	DUP
	PUSHINT 1893244873
	EQUAL
	IFJMPREF {
		CALL $onAcceptTokensTransfer$
	}
	DUP
	PUSHINT 2110382445
	EQUAL
	IFJMPREF {
		CALL $addStrategy$
	}
}

